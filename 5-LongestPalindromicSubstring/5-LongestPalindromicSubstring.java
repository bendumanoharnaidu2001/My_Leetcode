        }
        return s.substring(start,end+1);
            }
            if (len > end - start + 1) {
                start = i- (len - 1) / 2;
                end = i + len / 2;
    }
    public int expand(char[] s, int i, int j) {
            int len = Math.max(expand(charArray,i,i) , expand(charArray,i,i+1));
        for (int i=0; i<charArray.length; i++) {
        int start = 0;
        int end = 0;
        }
        char charArray[] = s.toCharArray();

        if (s.length()==0) {
            return "";
class Solution {
    public String longestPalindrome(String s) {
"
